name: kyverno-report-on-vulnerabilities

permissions: {}

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: kyverno/kyverno

jobs:
  scan:
    runs-on: ubuntu-latest
    outputs:
      results: ${{ steps.parse-results.outputs.results }}
    steps:
    - name: Get last three tags
      id: get-tags
      run: |
        latest_tag=$(curl -s https://api.github.com/repos/${{ env.IMAGE_NAME }}/tags | jq -r '.[0].name')
        latest1_tag=$(curl -s https://api.github.com/repos/${{ env.IMAGE_NAME }}/tags | jq -r '.[1].name')
        latest2_tag=$(curl -s https://api.github.com/repos/${{ env.IMAGE_NAME }}/tags | jq -r '.[2].name')
        echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
        echo "latest1_tag=$one_tag" >> $GITHUB_OUTPUT
        echo "latest2_tag=$two_tag" >> $GITHUB_OUTPUT

    - name: Scan for vulnerabilities in latest image
      uses: aquasecurity/trivy-action@f78e9ecf42a1271402d4f484518b9313235990e1 # v0.8.0 (Trivy v0.34.0)
      with: 
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tags.outputs.latest_tag }}
        format: json
        ignore-unfixed: false
        severity: HIGH,CRITICAL
        output: scan1.json

    - name: Scan for vulnerabilities in latest-1 image
      uses: aquasecurity/trivy-action@f78e9ecf42a1271402d4f484518b9313235990e1 # v0.8.0 (Trivy v0.34.0)
      with: 
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tags.outputs.latest1_tag }}
        format: json
        ignore-unfixed: false
        severity: HIGH,CRITICAL
        output: scan2.json

    - name: Scan for vulnerabilities in latest-2 image
      uses: aquasecurity/trivy-action@f78e9ecf42a1271402d4f484518b9313235990e1 # v0.8.0 (Trivy v0.34.0)
      with: 
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tags.outputs.latest2_tag }}
        format: json
        ignore-unfixed: false
        severity: HIGH,CRITICAL
        output: scan3.json

    - name: Merge scan results
      id: merge-results
      run: |
        jq -s add scan1.json scan2.json scan3.json > scan.json
        cat scan.json

    - name: Parse scan results
      id: parse-results
      continue-on-error: true
      run: |
        VULNS=$(cat scan.json | jq '.Results[] | select(.Target=="ko-app/kyverno") | length')
        if [[ $VULNS -eq 0 ]]
        then
          echo "No vulnerabilities found, halting"
          echo "results=nothing" >> $GITHUB_OUTPUT
        else
          echo "Vulnerabilities found, creating issue"
          echo "results=found" >> $GITHUB_OUTPUT
        fi

    - name: Upload vulnerability scan report
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      if: steps.parse-results.outputs.results == 'found'
      with:
        name: scan.json
        path: scan.json
        if-no-files-found: error
